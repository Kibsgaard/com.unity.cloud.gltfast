{% metadata_file .yamato/package.metafile -%}
---
code_format_check:
  name : Code Format check
  agent:
{% assign agent = agents.ubuntu-small -%}
    type: {{ agent.type }}
    image: {{ agent.image }}
    flavor: {{ agent.flavor}}
  commands:
    - >
      GIT_CLONE_PROTECTION_ACTIVE=false
      git clone --depth 1 --branch stable https://github.cds.internal.unity3d.com/unity/unity-meta.git
    - mv unity-meta ~
    - >
      perl ~/unity-meta/Tools/Format/format.pl
      --preview
      Packages/com.unity.cloud.gltfast
      Packages/com.unity.cloud.gltfast.tests/Tests
      Packages/com.unity.cloud.gltfast.tests/package.json
    - |
      if [ -s format.patch ]
      then
        echo "Install jq"
        sudo apt-get install jq
        echo "Creating Result"
        echo '{"title":"Code Format Check","conclusion":"failure","tags":["code-format","slack"],"resultType":"userFriendly","summary":"Some files have incorrect formatting! The `code_format_patch` artifact contains a patch that fixes it.","data":' > result.json
        cat format.patch | jq -Rs . >> result.json
        echo '}' >> result.json
        curl -X POST -d @result.json -H 'Content-Type: application/json' $YAMATO_REPORTING_SERVER/result
        echo "Failing job"
        exit -1
      else
        curl -X POST -d "{\"title\": \"Code Format Check\",\"conclusion\": \"success\"}" -H 'Content-Type: application/json' $YAMATO_REPORTING_SERVER/result
      fi
  artifacts:
    code_format_patch:
      paths:
        - "format.patch"
      browsable : onNonSuccess
